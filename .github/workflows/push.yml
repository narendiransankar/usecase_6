name: Terraform Deploy

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - '**'
  #     - main   
  # pull_request:
  #   branches:
  #     - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write 
    env:
      GITHUB_TOKEN: ${{ secrets.CICD_TOKEN }}


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout PR branch
        if: github.event_name == 'pull_request'
        run: |
          git fetch origin ${{ github.head_ref }}:${{ github.head_ref }}
          git checkout ${{ github.head_ref }}
          
      # - name: Set up Python (for Checkov)
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.10'

      # - name: Install Checkov
      #   run: pip install checkov

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::012889719104:role/oidc_role
          aws-region: ap-south-1

      - name: Verify identity
        run: aws sts get-caller-identity
        
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-south-1

      - name: Set up TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Initialize TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate


      # - name: Install Conftest (OPA)
      #   run: |
      #     wget https://github.com/open-policy-agent/conftest/releases/download/v0.45.0/conftest_0.45.0_Linux_x86_64.tar.gz
      #     tar xzf conftest_0.45.0_Linux_x86_64.tar.gz
      #     sudo mv conftest /usr/local/bin

      # - name: Run OPA Policy Check with Conftest
      #   run: |
      #     terraform plan -out tfplan.binary
      #     terraform show -json tfplan.binary > tfplan.json
      #     conftest test tfplan.json -p policy

          
      # - name: Generate Terraform Documentation
      #   uses: terraform-docs/gh-actions@v1.4.1
      #   with:
      #     working-dir: .
      #     output-file: README.md
      #     output-method: inject
      #     git-push: true
      #     git-commit-message: "docs: Update Terraform documentation"
      #     git-push-user-name: "GitHub Actions"
      #     git-push-user-email: "actions@github.com"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   continue-on-error: true

      # - name: Push README.md to PR branch
      #   if: github.event_name == 'pull_request'
      #   run: |
      #     git config --global user.name "GitHub Actions"
      #     git config --global user.email "actions@github.com"
      #     git checkout ${{ github.head_ref }}
      
      #     git add README.md
      
      #     # Only commit if there's a change
      #     git diff --cached --quiet || git commit -m "docs: Update Terraform documentation from PR"
      #     git push origin HEAD:${{ github.head_ref }}
          
      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
